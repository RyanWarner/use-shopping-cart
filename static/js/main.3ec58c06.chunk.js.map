{"version":3,"sources":["../../src/util.js","../../src/index.js","components/product.js","util.js","components/products.js","components/cart-display.js","App.js","index.js"],"names":["toCurrency","price","currency","language","Intl","style","checkoutCart","skus","sku","quantity","updateQuantity","skuID","updatedSkus","isNaN","removeItem","cartItems","item","reduceItemByOne","newCartItems","itemsToReduce","removeSku","reducer","cart","action","localStorage","JSON","index","lastClicked","shouldDisplayCart","console","CartContext","createContext","useStripeCart","useContext","dispatch","stripe","successUrl","cancelUrl","billingAddressCollection","allowedCountries","storageReference","checkoutData","Object","formatCheckoutCart","cartDetails","acc","current","formattedPrice","formatDetailedCart","addItem","type","deleteItem","cartCount","redirectToCheckout","a","options","items","submitType","Array","error","handleQuantityChange","storeLastClicked","handleCartClick","handleCartHover","handleCloseCart","totalPrice","calculateTotalPrice","removeCartItem","Product","products","name","image","sx","flexDirection","justifyContent","alignItems","src","NumberFormat","format","onClick","backgroundColor","Products","columns","map","product","key","CartDisplay","keys","length","textAlign","cartItem","width","display","fakeData","App","window","Stripe","process","REACT_APP_STRIPE_API_PUBLIC","ReactDOM","render","children","skuStorage","value","useReducer","document","getElementById"],"mappings":"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","file":"static/js/main.3ec58c06.chunk.js","sourcesContent":["export const toCurrency = ({ price, currency, language }) => {\n  const formatted = new Intl.NumberFormat(language, {\n    style: 'currency',\n    currency,\n  }).format(price / 100);\n\n  return formatted;\n};\n\nexport const calculateTotalPrice = (currency, cartItems) => {\n  const price = cartItems.reduce((acc, { price }) => acc + price, 0);\n  return toCurrency({ price, currency });\n};\n","import React, { createContext, useReducer, useContext } from 'react';\nimport { toCurrency, calculateTotalPrice } from './util';\n\n/**\n * @function checkoutCart\n * @param skus {Object}\n * @param sku {String}\n * @quantity {Number}\n * @description Adds skuID to skus object, if no quantity argument is passed, it increments by 1\n * @returns {Object} skus\n */\nconst checkoutCart = (skus, { sku }, quantity = 1) => {\n  if (skus.hasOwnProperty(sku)) {\n    return {\n      ...skus,\n      [sku]: skus[sku] + quantity,\n    };\n  } else {\n    return {\n      ...skus,\n      [sku]: quantity,\n    };\n  }\n};\n\nconst formatDetailedCart = (currency, cartItems, language) => {\n  return cartItems.reduce((acc, current) => {\n    const quantity = (acc[current.sku]?.quantity ?? 0) + 1;\n    const price = (acc[current.sku]?.price ?? 0) + current.price;\n    const formattedPrice = toCurrency({ price, currency, language });\n\n    return {\n      ...acc,\n      [current.sku]: {\n        ...current,\n        quantity,\n        price,\n        formattedPrice,\n      },\n    };\n  }, {});\n};\n\nconst formatCheckoutCart = (checkoutData) => {\n  return Object.keys(checkoutData).map((item) => ({\n    sku: item,\n    quantity: checkoutData[item],\n  }));\n};\n\nconst updateQuantity = (quantity, skuID, skus) => {\n  quantity = isNaN(quantity) ? 0 : quantity;\n\n  const updatedSkus = skus;\n  quantity === 0 ? delete updatedSkus[skuID] : (updatedSkus[skuID] = quantity);\n\n  return updatedSkus;\n};\n\nconst removeItem = (skuID, cartItems) => {\n  const newCartItems = cartItems.filter((item) => item.sku !== skuID);\n  return newCartItems;\n};\n\nconst reduceItemByOne = (skuID, cartItems) => {\n  const newCartItems = cartItems.filter((item) => item.sku !== skuID);\n  const itemsToReduce = cartItems.filter((item) => item.sku === skuID);\n  itemsToReduce.shift();\n  return [...newCartItems, ...itemsToReduce];\n};\n\nconst removeSku = (skuID, skus) => {\n  delete skus[skuID];\n\n  return skus;\n};\n\nconst reducer = (cart, action) => {\n  const { skus, cartItems } = cart;\n\n  switch (action.type) {\n    case 'addToCheckoutCart':\n      typeof localStorage !== 'undefined' &&\n        localStorage.setItem(\n          'skus',\n          JSON.stringify(checkoutCart(skus, action.sku))\n        );\n      return {\n        ...cart,\n        skus: checkoutCart(skus, action.sku),\n      };\n    case 'handleQuantityChange':\n      typeof localStorage !== 'undefined' &&\n        localStorage.setItem(\n          'skus',\n          JSON.stringify(updateQuantity(action.quantity, action.skuID, skus))\n        );\n      return {\n        ...cart,\n        skus: updateQuantity(action.quantity, action.skuID, skus),\n      };\n    case 'delete':\n      typeof localStorage !== 'undefined' &&\n        localStorage.setItem(\n          'skus',\n          JSON.stringify(removeSku(action.skuID, skus))\n        );\n\n      const index = cartItems.findIndex((item) => item.sku === action.skuID);\n\n      if (index !== -1) {\n        cartItems.splice(index, 1);\n      }\n      return {\n        ...cart,\n        skus: removeSku(action.skuID, skus),\n        cartItems,\n      };\n\n    case 'storeLastClicked':\n      return {\n        ...cart,\n        lastClicked: action.skuID,\n      };\n\n    case 'cartClick':\n      return {\n        ...cart,\n        shouldDisplayCart: !cart.shouldDisplayCart,\n      };\n\n    case 'cartHover':\n      return {\n        ...cart,\n        shouldDisplayCart: true,\n      };\n\n    case 'closeCart':\n      return {\n        ...cart,\n        shouldDisplayCart: false,\n      };\n    case 'addToCartItems':\n      return {\n        ...cart,\n        cartItems: [...cart.cartItems, action.sku],\n      };\n    case 'removeFromCartItems':\n      return {\n        ...cart,\n        cartItems: removeItem(action.sku, cart.cartItems),\n      };\n    case 'reduceItemByOne':\n      return {\n        ...cart,\n        cartItems: reduceItemByOne(action.sku, cart.cartItems),\n      };\n    default:\n      console.error(`unknown action ${action.type}`);\n      return cart;\n  }\n};\n\nexport const CartContext = createContext();\n\n/**\n * @param {{\n    children: JSX.Element,\n    stripe: any,\n    successUrl: string,\n    cancelUrl: string,\n    currency: string,\n    language: string,\n    billingAddressCollection: boolean,\n    allowedCountries: null | string[]\n * }}\n */\nexport const CartProvider = ({\n  children,\n  stripe,\n  successUrl,\n  cancelUrl,\n  currency,\n  language = navigator.language,\n  billingAddressCollection = false,\n  allowedCountries = null,\n}) => {\n  const skuStorage =\n    typeof window !== 'undefined'\n      ? JSON.parse(localStorage.getItem('skus'))\n      : {};\n  return (\n    <CartContext.Provider\n      value={useReducer(reducer, {\n        lastClicked: '',\n        skus: skuStorage || {},\n        shouldDisplayCart: false,\n        cartItems: [],\n        stripe,\n        successUrl,\n        cancelUrl,\n        currency,\n        billingAddressCollection,\n        allowedCountries,\n      })}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useStripeCart = () => {\n  const [cart, dispatch] = useContext(CartContext);\n\n  const {\n    skus,\n    stripe,\n    lastClicked,\n    shouldDisplayCart,\n    cartItems,\n    successUrl,\n    cancelUrl,\n    currency,\n    language,\n    billingAddressCollection,\n    allowedCountries,\n  } = cart;\n\n  let storageReference =\n    typeof localStorage === 'object' &&\n    JSON.parse(localStorage.getItem('skus'));\n\n  if (storageReference === null) {\n    storageReference = {};\n  }\n\n  const checkoutData = formatCheckoutCart(skus);\n\n  const totalPrice = () => calculateTotalPrice(currency, cartItems);\n\n  typeof localStorage === 'object' &&\n    localStorage.setItem('skus', JSON.stringify(storageReference));\n\n  const cartDetails = formatDetailedCart(currency, cartItems, language);\n\n  const cartCount = checkoutData.reduce(\n    (acc, current) => acc + current.quantity,\n    0\n  );\n\n  const addItem = (sku) => {\n    dispatch({ type: 'addToCheckoutCart', sku });\n    dispatch({ type: 'addToCartItems', sku });\n  };\n\n  const removeCartItem = (sku) => {\n    dispatch({ type: 'removeFromCartItems', sku });\n  };\n\n  const reduceItemByOne = (sku) => {\n    dispatch({ type: 'reduceItemByOne', sku });\n  };\n\n  const handleQuantityChange = (quantity, skuID) => {\n    dispatch({ type: 'handleQuantityChange', quantity, skuID });\n  };\n\n  const deleteItem = (skuID) => dispatch({ type: 'delete', skuID });\n\n  const storeLastClicked = (skuID) =>\n    dispatch({ type: 'storeLastClicked', skuID });\n\n  const handleCartClick = () => dispatch({ type: 'cartClick' });\n\n  const handleCartHover = () => dispatch({ type: 'cartHover' });\n\n  const handleCloseCart = () => dispatch({ type: 'closeCart' });\n\n  const redirectToCheckout = async () => {\n    const options = {\n      items: checkoutData,\n      successUrl,\n      cancelUrl,\n      billingAddressCollection: billingAddressCollection ? 'required' : 'auto',\n      submitType: 'auto',\n    };\n\n    if (Array.isArray(allowedCountries) && allowedCountries.length) {\n      options.shippingAddressCollection = {\n        allowedCountries,\n      };\n    }\n    console.log('options', options, stripe);\n\n    const { error } = await stripe.redirectToCheckout(options);\n    if (error) {\n      return error;\n    }\n  };\n\n  return {\n    skus,\n    addItem,\n    deleteItem,\n    cartCount,\n    checkoutData,\n    redirectToCheckout,\n    handleQuantityChange,\n    lastClicked,\n    storeLastClicked,\n    shouldDisplayCart,\n    handleCartClick,\n    cartItems,\n    cartDetails,\n    handleCartHover,\n    handleCloseCart,\n    totalPrice,\n    removeCartItem,\n    reduceItemByOne,\n  };\n};\n","/**@jsx jsx */\nimport { jsx, Box, Image, Button, Flex } from 'theme-ui';\nimport { useStripeCart } from 'use-stripe-cart';\nimport { toCurrency } from '../util';\n\nconst Product = products => {\n  const { addItem } = useStripeCart();\n  const { name, sku, price, image, currency } = products;\n  return (\n    <Flex\n      sx={{\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Image src={image} />\n      <Box>\n        <p>{name}</p>\n        <p>{toCurrency({ price: price, currency })}</p>\n      </Box>\n      <Button\n        onClick={() => addItem({ ...products })}\n        backgroundColor={'black'}\n      >\n        Add To Cart\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Product;\n","export const toCurrency = ({ price, currency }) => {\n  const formatted = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(price / 100);\n\n  return formatted;\n};\n","/**@jsx jsx */\nimport { jsx, Grid } from 'theme-ui';\nimport Product from './product';\n\nconst Products = ({ products }) => {\n  return (\n    <Grid columns={2}>\n      {products.map(product => (\n        <Product key={product.sku} {...product} />\n      ))}\n    </Grid>\n  );\n};\n\nexport default Products;\n","/**@jsx jsx */\nimport { jsx, Box, Flex, Image, Button } from 'theme-ui';\nimport { useStripeCart } from 'use-stripe-cart';\n\nconst CartDisplay = () => {\n  const {\n    cartDetails,\n    cartItems,\n    handleQuantityChange,\n    cartCount,\n    addItem,\n    removeCartItem,\n    totalPrice,\n    redirectToCheckout,\n    reduceItemByOne,\n  } = useStripeCart();\n\n  if (Object.keys(cartDetails).length === 0) {\n    return (\n      <Box sx={{ textAlign: 'center' }}>\n        <h2>Shopping Cart Display Panel</h2>\n        <h3>No items in cart</h3>\n      </Box>\n    );\n  } else {\n    return (\n      <Flex\n        sx={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <h2>Shopping Cart Display Panel</h2>\n        {Object.keys(cartDetails).map((item) => {\n          const cartItem = cartDetails[item];\n          const { name, sku, formattedPrice, quantity } = cartItem;\n          return (\n            <Flex\n              key={cartItem.sku}\n              sx={{\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <Flex sx={{ flexDirection: 'column', alignItems: 'center' }}>\n                <Image sx={{ width: 100 }} src={cartItem.image} />\n                <p>{name}</p>\n              </Flex>\n              <Box>\n                <span sx={{ display: 'block' }}>Price: {formattedPrice}</span>\n                <span sx={{ display: 'block' }}>qty: {quantity}</span>\n                <Button\n                  backgroundColor={'black'}\n                  onClick={() => addItem(cartItem)}\n                >\n                  +\n                </Button>\n                <Button\n                  backgroundColor={'black'}\n                  onClick={() => reduceItemByOne(sku)}\n                >\n                  -\n                </Button>\n              </Box>\n            </Flex>\n          );\n        })}\n        <h3>Total Items in Cart: {cartCount}</h3>\n        <h3>Total Price: {totalPrice()}</h3>\n        <Button sx={{ backgroundColor: 'black' }} onClick={redirectToCheckout}>\n          Checkout\n        </Button>\n      </Flex>\n    );\n  }\n};\n\nexport default CartDisplay;\n","/**@jsx jsx */\nimport { jsx } from 'theme-ui';\nimport { Flex } from 'theme-ui';\nimport Products from './components/products';\nimport CartDisplay from './components/cart-display';\nimport { toCurrency } from './util';\n\nconst fakeData = [\n  {\n    name: 'Bananas',\n    sku: 'sku_GBJ2Ep8246qeeT',\n    price: 400,\n    image: 'https://www.fillmurray.com/300/300',\n    currency: 'USD',\n  },\n  {\n    name: 'Tangerines',\n    sku: 'sku_GBJ2WWfMaGNC2Z',\n    price: 100,\n    image: 'https://www.fillmurray.com/300/300',\n    currency: 'USD',\n  },\n];\n\nconst App = () => {\n  return (\n    <Flex sx={{ justifyContent: 'space-evenly' }}>\n      <Products products={fakeData} />\n      <CartDisplay />\n    </Flex>\n  );\n};\nexport default App;\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui';\nimport ReactDOM from 'react-dom';\nimport { CartProvider } from 'use-stripe-cart';\nimport './index.css';\nimport App from './App';\n\nconst stripe = window.Stripe(process.env.REACT_APP_STRIPE_API_PUBLIC);\n\nReactDOM.render(\n  <CartProvider\n    stripe={stripe}\n    billingAddressCollection={false}\n    successUrl={'https://stripe.com'}\n    cancelUrl={'https://twitter.com/dayhaysoos'}\n    currency={'USD'}\n  >\n    <App />\n  </CartProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}